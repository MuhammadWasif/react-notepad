{"version":3,"sources":["AppHeader.js","Footer.js","Card.js","Main.js","NewNote.js","NewNotea.js","EditNote.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","_useState","useState","_useState2","Object","slicedToArray","leftPos","setLeftPos","react_default","a","createElement","className","onClick","style","left","width","Footer","x","setX","react_router_dom","to","console","log","background","transform","childArray","Card","props","id","children","localStorage","setItem","push","array","i","length","dangerouslySetInnerHTML","__html","join","Main","_useState3","_useState4","setCond","getItem","JSON","stringify","content","notesStorage","parse","_useState5","_useState6","notes","setNotes","map","note","index","key","src_Card","concat","e","splice","l","window","location","reload","NewNote","text","setText","len","right","lib_default","value","onChange","obj","href","NewNotea","_ref","match","params","EditNoteComp","App","src_AppHeader","react_router","path","exact","component","src_Footer","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfbce602.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './NewNote.css'\nimport './App.css'\n\nfunction AppHeader(){\n    \n    let [leftPos, setLeftPos] = useState('100%');\n    return (\n        <header>\n            <div className=\"menu center\" onClick={() => setLeftPos('0%')}>\n                <i className=\"fas fa-bars\" ></i>\n            </div>\n            <p>Quick<span>Note</span></p>\n    \n            <nav style={{left: leftPos}}>\n                <div className=\"nav-header\">\n                    <div className='center back' onClick={() => setLeftPos('100%')}>\n                        <i className=\"fas fa-arrow-left\"></i>\n                    </div>\n                    <p className='owner'>QuickNote</p>\n                </div>\n                <div className=\"menu-items\">\n                    <ul>\n                        <li><i className=\"fas fa-cog\"></i> Settings</li>\n                        <li><i className=\"far fa-user-circle\"></i> Profile</li>\n                    </ul>\n                    <hr width='80%'  />\n                    <ul>\n                        <li><i className=\"fab fa-dev\"></i> About Developer</li>\n                    </ul>\n                </div>\n          </nav>\n        </header>\n    \n        );\n}\n\nexport default AppHeader;","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Footer() {\n    let [x, setX] = useState('100%');\n    return (\n        <footer className=\"center\">\n            <Link to={x == '0%' ? '/' : '/new'} >\n            <button className=\"btn-add center\" onClick={() => {\n                setX(x == '0%' ? '100%':'0%')\n                console.log(x);\n            }}\n            style={x == '0%' ? {background: '#ff4444', transform: 'rotate(45deg)'} : {background: 'rgb(0, 148, 246)'}}>\n            <i className=\"fas fa-plus\"></i>\n            </button></Link>\n        </footer>  \n    );\n}\n\nexport default Footer;\n\n\n\n\n\n\n","import React from 'react';\n\nexport let childArray = [];\n\nconst Card = (props) => {\n    const {id, children} = props;\n    localStorage.setItem('current_read', id);\n    childArray.push(children);\n    let array = [];\n    for(let i = 0; i < children.length; i++){\n        if(children[i] + children[i+1] == '</'){\n            break;   \n        }else{\n            array.push(children[i]);\n        }      \n    }\n    return <div className=\"card\" dangerouslySetInnerHTML={{__html: array.join('') + '</h1>'}} ></div>;    \n}\n\nexport default Card;","import React, {useState} from 'react';\nimport Card from './Card';\nimport {Link} from 'react-router-dom';\n\nfunction Main() {\n    let [x, setX] = useState('100%');\n  let [cond, setCond] = useState('old');\n    let array = [{id: 0, content: '<h1>Hello World</h1>'}];\n  if(localStorage.getItem('notes') == null || localStorage.getItem('notes') == [])\n      localStorage.setItem('notes', JSON.stringify(array));\n\n  let notesStorage = JSON.parse(localStorage.getItem('notes'));\n  let [notes, setNotes] = useState(notesStorage);\n    return (\n\n        <div>\n            {notes.map((note, index) => \n                <div key={index}  className=\"card-cont\">\n                    <Card id={note.id}>{note.content}</Card>\n                    <div className=\"icons\">\n                    <Link to={`/old/${note.id}`}  className=\"fa fa-book-open\">\n                        <i  onClick={(e) => {\n                            x === '100%'? setX('0%'):setX('100%');\n                            setCond('old');\n                            localStorage.setItem('current_read', note.id)\n                        }}></i>\n                    </Link>\n                        <i className=\"fa fa-trash\" id={index} onClick={() => {\n                        notes.splice(index, 1);\n                        notes.map((l, i) => l.id = i);\n                        setNotes(notes);\n                        localStorage.setItem('notes', JSON.stringify(notes));\n                        window.location.reload();\n                        }}></i>\n                    <Link to={`/edit/${note.id}`} className=\"fa fa-edit\">\n                        <i onClick={() => {\n                            setX('0%')\n                            \n                        }}></i>\n                    </Link>\n                    </div>\n                </div> \n                )}\n            </div>\n    )\n}\n\nexport default Main;","import React, {useState} from 'react';\nimport './NewNote.css';\nimport ReactQuill from 'react-quill';\n\nfunction NewNote(props){\n    let  [text, setText] = useState('');\n    let  notes = JSON.parse(localStorage.getItem('notes'));\n    let  len = notes.length;\n    return (\n            <div className='new_note_modal' style={{right: '0%'}} >\n                <center>\n                <ReactQuill  \n                    value={text} \n                    onChange={(e) => setText(e)} \n                    className=\"editor\" />\n                </center>\n                <div className='btn-group'>\n                    <button className='save' onClick={() => {\n                        if(text != ''){\n                            const obj = {\n                                id: len,\n                                content: text\n                            }  \n                            notes.push(obj)\n                            localStorage.setItem('notes', JSON.stringify(notes));\n                            setText('');\n                            window.location.href = '/';\n                        }\n                    }}>\n                        <i className=\"fa fa-save\"></i> Save\n                    </button>\n                </div>\n            </div>\n        );\n   \n}\n\nexport default NewNote;","import React from 'react';\nimport './NewNote.css';\n\nfunction NewNotea({match}){\n    let id = match.params.id;\n    let note = JSON.parse(localStorage.getItem('notes'))[id];\n    \n    return <div className=\"read\" dangerouslySetInnerHTML={{__html: note.content}}></div>;\n}\n\nexport default NewNotea;","import React, {useState} from 'react';\nimport './NewNote.css';\nimport ReactQuill from 'react-quill';\n\nfunction EditNoteComp({match}){\n    const id = match.params.id\n    let [text, setText] = useState(JSON.parse(localStorage.getItem('notes'))[id].content)\n    let [notes, setNotes] = useState(JSON.parse(localStorage.getItem('notes')));\n    console.log(notes)\n    return (\n        <div className='new_note_modal' style={{right: '0%'}}>\n            <ReactQuill \n                value={text}\n                onChange={(value) => {\n                    setText(value)\n                }}\n                className=\"editor\"\n            />\n            <div className='btn-group'>\n                    <button className='save' onClick={() => {\n                        if(text != ''){\n                            notes[id].content = text;\n                            console.log(notes)\n                            localStorage.setItem('notes', JSON.stringify(notes));\n                            setText('')\n                            window.location.href = '/';\n                        }\n                    }}>\n                        <i className=\"fa fa-save\"></i> Save\n                    </button>\n                </div>\n        </div>\n    );\n}\n\nexport default EditNoteComp;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport AppHeader from './AppHeader';\nimport Footer from './Footer';\nimport Main from './Main';\nimport NewNote from './NewNote';\nimport NewNotea from './NewNotea';\nimport EditNoteComp from './EditNote';\n\n\nfunction App() {\n    return (\n      <Router>\n          <AppHeader />\n          <Route path='/' exact component={Main}></Route>\n          <Route path='/new' exact component={NewNote}></Route>\n          <Route path='/old/:id' component={NewNotea}></Route>\n          <Route path='/edit/:id' component={EditNoteComp}></Route>\n        <div className=\"App\"></div>\n        <Footer />\n      </Router>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}